// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TutorialApplication.Data;

#nullable disable

namespace TutorialApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Ego Jenpachi",
                            CategoryId = 2,
                            Description = "Hello World",
                            ISBN = "123456789",
                            ImageUrl = "123",
                            ListPrice = 100.0,
                            Price = 90.0,
                            Price100 = 70.0,
                            Price50 = 80.0,
                            Title = "Blue Lock"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Hajime Isayama",
                            CategoryId = 2,
                            Description = "Fight for freedom.",
                            ISBN = "987654321",
                            ImageUrl = "123",
                            ListPrice = 150.0,
                            Price = 140.0,
                            Price100 = 120.0,
                            Price50 = 130.0,
                            Title = "Attack on Titan"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Eiichiro Oda",
                            CategoryId = 5,
                            Description = "Adventure of Luffy and crew.",
                            ISBN = "1122334455",
                            ImageUrl = "123",
                            ListPrice = 200.0,
                            Price = 180.0,
                            Price100 = 150.0,
                            Price50 = 160.0,
                            Title = "One Piece"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Koyoharu Gotouge",
                            CategoryId = 5,
                            Description = "Story of Tanjiro Kamado.",
                            ISBN = "2233445566",
                            ImageUrl = "123",
                            ListPrice = 120.0,
                            Price = 110.0,
                            Price100 = 90.0,
                            Price50 = 100.0,
                            Title = "Demon Slayer"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Masashi Kishimoto",
                            CategoryId = 6,
                            Description = "The journey of a ninja.",
                            ISBN = "3344556677",
                            ImageUrl = "123",
                            ListPrice = 130.0,
                            Price = 120.0,
                            Price100 = 100.0,
                            Price50 = 110.0,
                            Title = "Naruto"
                        });
                });

            modelBuilder.Entity("TutorialApplication.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 3,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 2,
                            Name = "SciFi"
                        });
                });

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.HasOne("TutorialApplication.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
